<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   >
  <!--#region 重置默认样式-->
    <Style TargetType="Button">
        <Setter Property="Width" Value="87"/>
        <Setter Property="Height" Value="42"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="{StaticResource AnniButtonGreenColor}"></Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Window">
        <Setter Property="Icon" Value="pack://application:,,,/Resources/Images/logo.ico"></Setter>
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
    </Style>

    <Style TargetType="GridViewColumnHeader" x:Key="AnniGridViewColumnHeaderStyle">
        <Setter Property="Background" Value="{StaticResource AnniHeaderGrayColor}"></Setter>
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="IsManipulationEnabled" Value="False"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates"/>
                            <VisualStateGroup x:Name="FocusStates"/>
                            <VisualStateGroup x:Name="ValidationStates"/>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>
                                <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                                    <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0"/>
                        <Border x:Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
               
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Background" Value="{StaticResource AnniHeaderGrayColor}"></Setter>
                <Setter Property="TextElement.Foreground" Value="Black"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region 登录、注册输入框-->
    <Style x:Key="LabelBlockStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="InputboxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
    </Style>

        <Style x:Key="SelectboxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
    </Style>
    <Style x:Key="PasswordStyle" TargetType="PasswordBox">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
    </Style>
    <Style x:Key="BoxLayoutStyle" TargetType="StackPanel">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="325"/>
        <Setter Property="Height" Value="50"/>
    </Style>
    <Style x:Key="ComboboxStyle" TargetType="ComboBox">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
    </Style>
    <!--endregion-->

    <!--#region 登录、注册绿色大按钮-->
    <Style x:Key="LoginButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="20"/>
		<Setter Property="Background" Value="#8cc63e"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          Opacity="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="grid" Property="Background" Value="Green" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#C7C7C7"></Setter>
                            <Setter Property="Foreground" Value="#979797" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Color x:Key="HeaderColor">#E4E4E4</Color>

    <!--#region 标题-->
    <Style x:Key="H2Block" TargetType="TextBlock">
        <Setter Property="Height" Value="40" />
        <Setter Property="Padding" Value="20,10,0,0" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="#19912D" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="15" />
    </Style>
    <!--#endregion-->

    <Style x:Key="ErrorMessageStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Red"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Focusable" Value="False"></Setter>
    </Style>

    <!--#region 主页窗体模板-->
    <ControlTemplate x:Key="MainWindowControlTemplate" TargetType="{x:Type Window}">
        <ControlTemplate.Resources>
            <Style TargetType="Window">
                <Setter Property="WindowStyle" Value="SingleBorderWindow"></Setter>
            </Style>
        </ControlTemplate.Resources>
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="0.93*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.21*"/>
                    <ColumnDefinition Width="0.79*"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter Grid.ColumnSpan="2"                                   
                Grid.Row="1" 
                Content="{TemplateBinding Content}" 
                ContentTemplate="{TemplateBinding ContentTemplate}"
                />
                <ResizeGrip 
                HorizontalAlignment="Right" 
                x:Name="WindowResizeGrip" 
                VerticalAlignment="Bottom" 
                IsTabStop="False" 
                Visibility="Collapsed" 
                Grid.Column="1" 
                Grid.Row="2"
                />
                <TextBlock Text="My Logo" />
                <TextBlock Grid.Column="1" Text="My Title"/>
                <StatusBar Height="20" Grid.ColumnSpan="2" Grid.Row="2"/>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->


    <Style TargetType="Button" x:Key="ButtonStyle">
        <Setter Property="Background" Value="{StaticResource CommonButtonBackgroundColorBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="buttonContentPresenter" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          Opacity="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonContentPresenter" Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="buttonContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="grid" Property="Background" Value="Green" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="grid" Property="Background" Value="{StaticResource AnniDisabledButtonGrayColor}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.9"></Setter>
                <Setter Property="Background" Value="{StaticResource CommonButtonBackgroundColorBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="ListViewToggleButtonStyle">
        <Setter Property="Width" Value="60"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Background" Value="{StaticResource AnniDisabledButtonGrayColor}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource AnniButtonGreenColor}"></Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="{StaticResource AnniDisabledButtonGrayColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="H2OrangeStyle">
        <Setter Property="FontFamily" Value="SimHei"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
    </Style>

    <!--#region 分组按钮-->
    <Style TargetType="Button" x:Key="GroupButtonStyle" BasedOn="{x:Null}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource AnniButtonGreenColor}"></Setter>
        <Setter Property="Background" Value="Transparent" x:Name="bg"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" x:Name="bl">
                        <ContentPresenter />
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bl" Property="FontWeight" Value="Bold"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource AnniDisabledButtonGrayColor}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>